plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
}

group = 'me.harvanchik'
version = '0.1.0-SNAPSHOT'

repositories {
    mavenCentral()
    // papermc
    maven { url = 'https://repo.papermc.io/repository/maven-public/' }
    // sonatype
    maven { url = 'https://oss.sonatype.org/content/groups/public/' }
    // annoated command framework
    maven { url = 'https://repo.aikar.co/content/groups/aikar/' }
    // tab api
    maven { url 'https://repo.kryptonmc.org/releases' }
}

dependencies {
    // papermc
    compileOnly 'io.papermc.paper:paper-api:1.19.4-R0.1-SNAPSHOT'
    // lombok
    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    // annoated command framework
    implementation 'co.aikar:acf-paper:0.5.1-SNAPSHOT'
    // tab api
    compileOnly 'me.neznamy:tab-api:3.2.4'
}

shadowJar {
    relocate 'co.aikar.commands', "${group}.survivor.acf"
    relocate 'co.aikar.locales', "${group}.survivor.locales"
}

jar {
    destinationDirectory.set(file("C:/Users/Jake/Minecraft/Servers/Survivor/plugins"))
}

shadowJar {
    destinationDirectory.set(file("C:/Users/Jake/Minecraft/Servers/Survivor/plugins"))
    // set name of jar file including version
    archiveFileName.set("Survivor-${version}.jar")
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

build.dependsOn shadowJar
